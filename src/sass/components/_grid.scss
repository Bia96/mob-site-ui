/* Grid
  =============== */

// Mobile first grids are 100% width
[class*="column"] { 
	flex: 1; 
}
@include large-screen {
  // Add padding on desktop
  [class*="column"] {
  	padding-left: 1rem; 
    padding-right: 1rem;
  } 
  // Add columns on desktop
	.row {
	  display: flex;
	  flex-direction: row;
	  flex-wrap: nowrap;
  }
}

// Run a loop 10 times to get multiples of 10
@for $i from 1 through 9 {
	$width: $i;
	
	.column-#{$i * 10} {
		flex: $width;
	}
}
// 1/4 and 1/3 fractions
.column-25 { flex: (1/4) * 10; }
.column-33 { flex: (1/3) * 10; }
.column-66 { flex: (2/3) * 10; }
.column-75 { flex: (3/4) * 10; }

// Run a loop 10 times to get multiples of 10
@include large-screen {
	@for $i from 1 through 9 {
		$width: $i;
		.column-#{$i * 10} {
			max-width: percentage($width) * .1;
		}
	} 
  // 1/4 and 1/3 fractions
  .column-25 { max-width: 25%; }
  .column-33 { max-width: 33.3333%; }
  .column-66 { max-width: 66.6667%; }
  .column-75 { max-width: 75%; }
}

// Fixed pixel amounts
// Run a loop 12 times to get multiples of 100 in pixels
@for $i from 1 through 12 {
	$px: $i * 100px;
	
	.column-#{$i * 100} {
		flex: 0 0 $px;
	}
}

// Offsets
// Run a loop 10 times to get a percentage of every multiple of ten
@include large-screen {
  @for $i from 1 through 9 {
    $margin: $i * 10%;

    .offset-#{$i * 10} {
      margin-left: $margin; //margin-left: calc(#{$margin} + 1rem);
    }
  }
	 // 1/4 and 1/3 fractions
  .offset-25 { margin-left: 25%; }
  .offset-33 { margin-left: 33%; }
  .offset-66 { margin-left: 66%; }
  .offset-75 { margin-left: 75%; } 
}

// Repeating list grid
[class*="grid"] {
	padding: 0;
	margin: 0;
	list-style: none;
	display: flex;
	flex-wrap: wrap;
	> li {
		width: 100%;
	}
  &.half { // Add half class for 50% wide on mobile
    > li {
    width: 50%;
    }
  }
}

@include large-screen {
  [class*="grid"] {
    > li {
      padding-left: 1rem;
      padding-right: 1rem;
    }
  }
  // Run a loop 8 times for repeating grid possiblities
  @for $i from 1 through 8 {
    $percent: percentage(1/$i);

    .grid-#{$i} {
      &.half > li, > li,  {
        width: $percent;
      }
    }
  }
}

// Prevent mobile breakpoint with no-collapse class
.no-collapse {
	display: flex;
	flex-direction: row;
	flex-wrap: nowrap; 
}

// Vertical alignment
.align-vertical {
  align-items: center;
}

// Gutters
.no-collapse.gutters {
	> [class*="column"] ~ [class*="column"] {
  	margin-left: 1rem;
	}
}
.gutters [class*="column"] ~ [class*="column"] {
  margin-left: 0;
}
@include large-screen {
  .gutters [class*="column"] ~ [class*="column"] {
  margin-left: 1rem;
	}
}

