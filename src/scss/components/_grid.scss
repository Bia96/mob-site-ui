/* Grid
=============== */

// Mobile column view
%full-width-column {
	width: 100%;
	margin-bottom: $row-margin;
}

// Non collapsing columns
%no-collapse {
	float: left;
}

// Breakpoint view
@include small-breakpoint {
	%no-collapse {
		float: left;
		padding-left: $column-padding;
		padding-right: $column-padding;
		margin-bottom: 0;
	}
}

// Clearfix row
.row {
	&::before,
	&::after {
		display: block;
		content: ' ';
		clear: both;
		margin-left: -1rem;
		margin-right: -1rem;
	}
}


/* Mobile view */

// On mobile, all columns are full width with a bottom margin
@each $entry in $grid {
	.small-#{floor($entry)},
	.large-#{floor($entry)} {
		@extend %full-width-column;
	}
	.column-#{floor($entry)} {
		width: percentage($entry) * 0.01;
		@extend %no-collapse;
	}
}


/* Small screen breakpoint */

@include small-breakpoint {
	// Float all columns to the left for small screens
	@each $entry in $grid {
		.small-#{floor($entry)} {
			width: percentage($entry) * 0.01;
			float: left;
			padding-left: 1rem;
			padding-right: 1rem;
			margin-bottom: 0;
		}
		.large-#{floor($entry)} {
			padding-left: 1rem;
			padding-right: 1rem;
			margin-bottom: 0;
		}
		// Small offsets
		.push-small-#{floor($entry)} {
			margin-left: percentage($entry) * 0.01;
		}
	}
}


/* Large screen breakpoint */

@include large-breakpoint {
	// Float columns to the left at for large screens
	@each $entry in $grid {
		.large-#{floor($entry)} {
			width: percentage($entry) * 0.01;
			float: left;
			padding-left: 1rem;
			padding-right: 1rem;
			margin-bottom: 0;
		}
		// Large offsets
		.push-large-#{floor($entry)} {
			margin-left: percentage($entry) * 0.01;
		}
	}
}


/* Padding */

.no-padding > * {
	padding: 0;
}

.gutters {
	padding: 0;
}

.gutters ~ .gutters {
	padding-left: $column-padding;
}


/* Flex Grid */

.grid {
	display: flex;
	flex-wrap: wrap;
}

.cell {
	flex-grow: 1;
}